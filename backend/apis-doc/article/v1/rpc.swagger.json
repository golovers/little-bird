{
  "swagger": "2.0",
  "info": {
    "title": "article/v1/rpc.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/articles": {
      "get": {
        "summary": "List articles",
        "operationId": "ListArticles",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1ListArticleResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "ArticleService"
        ]
      }
    },
    "/v1/articles/createdby": {
      "get": {
        "operationId": "ListArticleCreatedBy",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1ListArticleResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "owner_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ArticleService"
        ]
      }
    },
    "/v1/articles/{id}": {
      "get": {
        "operationId": "GetArticle",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Article"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ArticleService"
        ]
      },
      "delete": {
        "operationId": "DeleteArticle",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ArticleService"
        ]
      },
      "put": {
        "operationId": "UpdateArticle",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ArticleService"
        ]
      }
    }
  },
  "definitions": {
    "protobufEmpty": {
      "type": "object",
      "description": "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "title": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:"
    },
    "v1Article": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "markdown": {
          "type": "string"
        },
        "last_update": {
          "type": "string"
        },
        "created_by": {
          "type": "string"
        },
        "created_by_id": {
          "type": "string"
        }
      }
    },
    "v1DeleteArticletRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1GetArticletRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1ListArticleCreatedByRequest": {
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "string"
        }
      }
    },
    "v1ListArticleRequest": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "string",
          "format": "int64"
        },
        "limit": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1ListArticleResponse": {
      "type": "object",
      "properties": {
        "articles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Article"
          }
        }
      }
    },
    "v1UpdateArticletRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "article": {
          "$ref": "#/definitions/v1Article"
        }
      }
    }
  }
}
